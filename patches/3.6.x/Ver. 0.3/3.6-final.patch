#
# This file has no copyright assigned and is placed in the Public Domain.
#
# Patch: Version 0.3 [Recommend] mozbuildtools 1.1.1
#
# For: Mozilla Firefox 3.6 ( Gecko 1.9.2 )
#
--- a/js/src/configure.in
+++ b/js/src/configure.in
@@ -179,5 +179,5 @@
     if test -z "$CXX"; then CXX=cl; fi
     if test -z "$CPP"; then CPP="cl -E -nologo"; fi
-    if test -z "$CXXCPP"; then CXXCPP="cl -TP -E -nologo"; ac_cv_prog_CXXCPP="$CXXCPP"; fi
+    if test -z "$CXXCPP"; then CXXCPP="cl -TP -E -nologo"; fi ; ac_cv_prog_CXXCPP="$CXXCPP"
     if test -z "$LD"; then LD=link; fi
     if test -z "$AS"; then AS=ml; fi
@@ -520,6 +520,7 @@
         unset _MSVC_VER_FILTER
 
     else
+        _WIN32_MINGW=1
         # Check w32api version
         _W32API_MAJOR_VERSION=`echo $W32API_VERSION | $AWK -F\. '{ print $1 }'`
         _W32API_MINOR_VERSION=`echo $W32API_VERSION | $AWK -F\. '{ print $2 }'`
@@ -604,6 +605,9 @@
         AC_DEFINE(JS_STDDEF_H_HAS_INTPTR_T)
         ;;
     esac
+elif test -n "$_WIN32_MINGW" ; then
+    AC_DEFINE(HAVE_SYSTEMTIMETOFILETIME)
+    AC_DEFINE(HAVE_GETSYSTEMTIMEASFILETIME)
 fi
 
 fi # COMPILE_ENVIRONMENT
@@ -5287,5 +5291,5 @@
 
 # Produce the js-config script at configure time; see the comments for
 # 'js-config' in Makefile.in.
-AC_MSG_RESULT(invoking make to create js-config script)
-$MAKE js-config
+#AC_MSG_RESULT(invoking make to create js-config script)
+#$MAKE js-config
--- a/nsprpub/configure.in
+++ b/nsprpub/configure.in
@@ -714,6 +714,10 @@
     OS_ARCH='CYGWIN_NT-4.0'
     OS_TARGET=WIN95
     ;;
+MINGW32_NT*)
+    OS_ARCH='WINNT'
+    OS_TARGET=WIN95
+    ;;
 OS_2)
     OS_ARCH=OS2
     OS_TARGET=OS2
--- a/Makefile.in
+++ b/Makefile.in
@@ -95,6 +95,10 @@
 	$(RM) -rf $(DIST)/public
 	$(RM) -rf $(DIST)/bin/components
 	$(RM) -rf _tests
+ifeq ($(OS_ARCH),WINNT)
+	test ! -d $(DIST)/bin && mkdir -p $(DIST)/bin ; echo
+	for files in `find "${MOZ_TOOLS}/bin" -name '*.dll'` ; do cp "$$files" "$(DIST)/bin" ; done ;
+endif
 
 # Build pseudo-external modules first when export is explicitly called
 export::
--- a/config/config.mk
+++ b/config/config.mk
@@ -392,8 +392,10 @@
 OS_CXXFLAGS += $(PROFILE_GEN_CFLAGS)
 OS_LDFLAGS += $(PROFILE_GEN_LDFLAGS)
 ifeq (WINNT,$(OS_ARCH))
+ifndef GNU_CC
 AR_FLAGS += -LTCG
 endif
+endif
 endif # INTERNAL_TOOLS
 endif # MOZ_PROFILE_GENERATE
 
@@ -403,8 +405,10 @@
 OS_CXXFLAGS += $(PROFILE_USE_CFLAGS)
 OS_LDFLAGS += $(PROFILE_USE_LDFLAGS)
 ifeq (WINNT,$(OS_ARCH))
+ifndef GNU_CC
 AR_FLAGS += -LTCG
 endif
+endif
 endif # INTERNAL_TOOLS
 endif # MOZ_PROFILE_USE
 endif # NO_PROFILE_GUIDED_OPTIMIZE
--- a/configure.in
+++ b/configure.in
@@ -189,7 +189,7 @@
     if test -z "$CC"; then CC=cl; fi
     if test -z "$CXX"; then CXX=cl; fi
     if test -z "$CPP"; then CPP="cl -E -nologo"; fi
-    if test -z "$CXXCPP"; then CXXCPP="cl -TP -E -nologo"; ac_cv_prog_CXXCPP="$CXXCPP"; fi
+    if test -z "$CXXCPP"; then CXXCPP="cl -TP -E -nologo"; fi; ac_cv_prog_CXXCPP="$CXXCPP"
     if test -z "$LD"; then LD=link; fi
     if test -z "$AS"; then AS=ml; fi
     if test -z "$MIDL"; then MIDL=midl; fi
@@ -2122,7 +2122,7 @@
         DYNAMIC_XPCOM_LIBS='-L$(LIBXUL_DIST)/lib -lxpcom -lxpcom_core'
         XPCOM_FROZEN_LDOPTS='-L$(LIBXUL_DIST)/lib -lxpcom'
         DLL_PREFIX=
-        IMPORT_LIB_SUFFIX=dll.a
+        IMPORT_LIB_SUFFIX=a
     else
         TARGET_COMPILER_ABI=msvc
         HOST_CC='$(CC)'
@@ -4515,6 +4515,7 @@
 MOZ_NO_INSPECTOR_APIS=
 MOZ_NO_XPCOM_OBSOLETE=
 MOZ_NO_FAST_LOAD=
+NS_ENABLE_TSF=1
 MOZ_OGG=1
 MOZ_SYDNEYAUDIO=
 MOZ_WAVE=1
@@ -5499,6 +5500,25 @@
     AC_DEFINE(MOZ_NO_FAST_LOAD)
 fi
 
+dnl
+dnl Text Services Framework support
+dnl
+if test "$GNU_CC" ; then
+    NS_ENABLE_TSF=
+fi
+if test "$WINCE" ; then
+    NS_ENABLE_TSF=
+fi
+
+MOZ_ARG_DISABLE_BOOL(tsf,
+[  --disable-tsf       Disable Text Services Framework support],
+    NS_ENABLE_TSF=,
+    NS_ENABLE_TSF=1)
+AC_SUBST(NS_ENABLE_TSF)
+if test "$NS_ENABLE_TSF"; then
+    AC_DEFINE(NS_ENABLE_TSF)
+fi
+
 dnl ========================================================
 dnl = Disable Ogg Codecs
 dnl ========================================================
@@ -7984,6 +8004,7 @@
 AC_SUBST(BIN_FLAGS)
 AC_SUBST(NS_USE_NATIVE)
 AC_SUBST(MOZ_WIDGET_TOOLKIT)
+AC_SUBST(NS_ENABLE_TSF)
 AC_SUBST(MOZ_GFX_TOOLKIT)
 AC_SUBST(MOZ_UPDATE_XTERM)
 AC_SUBST(MINIMO)
--- a/security/manager/Makefile.in
+++ b/security/manager/Makefile.in
@@ -180,6 +180,8 @@
 DEFAULT_GMAKE_FLAGS += MOZILLA_CLIENT=1
 DEFAULT_GMAKE_FLAGS += NO_MDUPDATE=1
 DEFAULT_GMAKE_FLAGS += NSS_ENABLE_ECC=1
+# Pass theIMPORT_LIB_SUFFIX into the sub makefiles
+DEFAULT_GMAKE_FLAGS += IMPORT_LIB_SUFFIX=.$(IMPORT_LIB_SUFFIX)
 ifdef NSS_DISABLE_DBM 
 DEFAULT_GMAKE_FLAGS += NSS_DISABLE_DBM=1
 endif
--- a/js/src/jstracer.cpp
+++ b/js/src/jstracer.cpp
@@ -50,6 +50,15 @@
 #define alloca _alloca
 #endif
 #endif
+
+//MinGW
+#ifdef __GNUC__
+#ifndef HAVE_ALLOCA_H
+#include <malloc.h>
+#define alloca _alloca
+#endif
+#endif
+
 #ifdef SOLARIS
 #include <alloca.h>
 #endif
--- a/js/src/nanojit/Nativei386.cpp
+++ b/js/src/nanojit/Nativei386.cpp
@@ -257,7 +257,7 @@
     {
         Register r;
         RegAlloc &regs = _allocator;
-    #ifdef WIN32
+	 #if (defined WIN32) && (!defined __MINGW32__)
         _asm
         {
             mov ecx, regs
--- a/modules/libpr0n/decoders/png/nsPNGDecoder.cpp
+++ b/modules/libpr0n/decoders/png/nsPNGDecoder.cpp
@@ -57,6 +57,8 @@
 #include "png.h"
 
 #include "gfxPlatform.h"
+
+#include <limits.h>
 
 static void PNGAPI info_callback(png_structp png_ptr, png_infop info_ptr);
 static void PNGAPI row_callback(png_structp png_ptr, png_bytep new_row,
--- a/widget/src/windows/nsWindow.h
+++ b/widget/src/windows/nsWindow.h
@@ -76,9 +76,11 @@
 #endif
 
 // Text Services Framework support
-#if !defined(WINCE)
+//#if ! ( defined WINCE  ||  defined __MINGW32__ )
+//#define NS_ENABLE_TSF
+//#endif // !defined(WINCE)
+
-#define NS_ENABLE_TSF
+//#define NS_ENABLE_TSF
-#endif // !defined(WINCE)
 
 /**
  * Forward class definitions
--- a/media/liboggz/include/oggz/config_win32.h
+++ a/media/liboggz/include/oggz/config_win32.h
@@ -1,5 +1,8 @@
 /* config.h.  Generated by configure.  */
 /* config.h.in.  Generated from configure.ac by autoheader.  */
+
+#if ! ( defined LIBOGGZ_CONFIG_WIN32_H )
+#define LIBOGGZ_CONFIG_WIN32_H
 
 /* Define to 1 if you have the <dlfcn.h> header file. */
 #undef HAVE_DLFCN_H
@@ -137,2 +140,4 @@
 
 #define inline __inline // MSVC
+ 
+#endif
--- a/gfx/thebes/src/gfxWindowsFonts.cpp
+++ a/gfx/thebes/src/gfxWindowsFonts.cpp
@@ -1183,6 +1183,6 @@
         // delete it immediately it goes out of scope, not call
         // gfxFont::Release which deals with shared, cached font instances.
-        nsAutoPtr<gfxWindowsFont> tempFont =
-            new gfxWindowsFont(GetFontEntry(), GetStyle(), CAIRO_ANTIALIAS_NONE);
+        nsAutoPtr<gfxWindowsFont> tempFont 
+           (new gfxWindowsFont(GetFontEntry(), GetStyle(), CAIRO_ANTIALIAS_NONE));
         if (tempFont) {
             return tempFont->Measure(aTextRun, aStart, aEnd,
--- a/widget/src/windows/Makefile.in
+++ a/widget/src/windows/Makefile.in
@@ -126,4 +126,8 @@
 	nsBidiKeyboard.cpp   \
-	nsTextStore.cpp \
 	$(NULL)
+ifdef NS_ENABLE_TSF
+CPPSRCS += \
+	nsTextStore.cpp \
+	$(NULL)
+endif
 endif
--- a/security/nss/lib/freebl/config.mk
+++ b/security/nss/lib/freebl/config.mk
@@ -85,7 +85,11 @
 RESNAME = freebl.rc
 
 ifndef WINCE
+ifdef NS_USE_GCC
+OS_LIBS += -lshell32
+else
 OS_LIBS += shell32.lib
+endif
 endif
 
 ifdef NS_USE_GCC
--- a/widget/src/windows/nsIMM32Handler.cpp
+++ b/widget/src/windows/nsIMM32Handler.cpp
@@ -1466,6 +1466,7 @@
   // positioning:      2301 2301 2301
   nsIntRect cursorInTopLevel;
+  nsIntRect tmp = nsIntRect(cursor, nsIntSize(0, 0));
-  ResolveIMECaretPos(aWindow, nsIntRect(cursor, nsIntSize(0, 0)),
-                     aWindow->GetTopLevelWindow(PR_FALSE), cursorInTopLevel);
+  ResolveIMECaretPos((nsIWidget*)aWindow, tmp,
+                     (nsIWidget*)aWindow->GetTopLevelWindow(PR_FALSE), cursorInTopLevel);
   PRInt32 cursorXInChar = cursorInTopLevel.x - charAtPt.mReply.mRect.x;
   int positioning = cursorXInChar * 4 / charAtPt.mReply.mRect.width;
--- a/config/nsinstall_win.c
+++ b/config/nsinstall_win.c
@@ -55,6 +55,13 @@
 }
 
+#ifndef __MINGW32__
 int wmain(int argc, wchar_t *argv[ ])
 {
+#else
+int main()
+{
+    int argc;
+    wchar_t **argv = CommandLineToArgvW(GetCommandLineW(), &argc); 
+#endif
     return shellNsinstall ( argv + 1 );
 }
--- a/js/src/config/nsinstall_win.c
+++ b/js/src/config/nsinstall_win.c
@@ -55,6 +55,13 @@
 }
 
+#ifndef __MINGW32__
 int wmain(int argc, wchar_t *argv[ ])
 {
+#else
+int main()
+{
+    int argc;
+    wchar_t **argv = CommandLineToArgvW(GetCommandLineW(), &argc); 
+#endif
     return shellNsinstall ( argv + 1 );
 }
--- a/toolkit/toolkit-makefiles.sh
+++ b/toolkit/toolkit-makefiles.sh
@@ -138,6 +138,10 @@
   parser/htmlparser/tests/outsinks/Makefile
 "
 
+MAKEFILES_html5="
+  parser/html/Makefile
+"
+
 MAKEFILES_intl="
   intl/Makefile
   intl/build/Makefile
@@ -881,6 +885,7 @@
   $MAKEFILES_xmlparser
   $MAKEFILES_gfx
   $MAKEFILES_htmlparser
+  $MAKEFILES_html5
   $MAKEFILES_intl
   $MAKEFILES_liveconnect
   $MAKEFILES_xpconnect
--- a/gfx/thebes/Makefile.in
+++ b/gfx/thebes/Makefile.in
@@ -8,7 +8,11 @@
 
 MODULE	= thebes
 
-DIRS	= public src mochitest
+DIRS	= public src
+
+ifdef ENABLE_TESTS
+DIRS	+= mochitest
+endif
 
 ifdef ENABLE_TESTS
 ifndef MOZ_ENABLE_LIBXUL
--- a/build/autoconf/make-makefile	2010-01-21 11:29:56 +0800
+++ b/build/autoconf/make-makefile	2010-02-08 13:02:58 +0800
@@ -45,7 +45,7 @@
 #$debug = 1;
 
 if ($^O eq 'msys') {
-  $pwdcmd = 'pwd -W';
+  $pwdcmd = 'sh -c pwd -W';
 }
 else {
   $pwdcmd = 'pwd';
